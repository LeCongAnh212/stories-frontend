'use strict';

const compilerSfc = require('@vue/compiler-sfc');
const MagicString = require('magic-string');

const disableAttrInherit = function(code, id) {
  let s;
  const str = () => s || (s = new MagicString(code));
  const { descriptor } = compilerSfc.parse(code);
  if (descriptor.script || !descriptor.scriptSetup) {
    return null;
  }
  const result = compilerSfc.compileScript(descriptor, { id });
  const inheritAttrs = result.attrs["inherit-attrs"];
  const lang = result.attrs.lang;
  if (inheritAttrs === "false") {
    str().appendLeft(
      0,
      `<script ${lang ? `lang="${lang}"` : ""}>
export default {
  inheritAttrs: false
}
<\/script>
`
    );
  }
  return {
    map: str().generateMap(),
    code: str().toString()
  };
};
const index = () => {
  return {
    name: "vite-plugin-vue-setup-inherit-attrs",
    enforce: "pre",
    async transform(code, id) {
      if (!/\.vue$/.test(id)) {
        return null;
      }
      return disableAttrInherit(code, id);
    }
  };
};

module.exports = index;
